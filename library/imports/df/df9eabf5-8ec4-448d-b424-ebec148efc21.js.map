{"version":3,"sources":["assets/scripts/Star.js"],"names":["cc","Class","Component","properties","pickRadius","onLoad","getPlayerDistance","onPicked","playerPos","game","player","getPosition","dist","node","position","sub","mag","console","log","parent","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE,CADJ,CAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBQ,GAHP;AAsBL;AAEAC,EAAAA,MAxBK,oBAwBI;AACL;AACA,QAAI,KAAKC,iBAAL,KAA2B,KAAKF,UAApC,EAAgD;AAC5C;AACA,WAAKG,QAAL;AACA;AACH;AACJ,GA/BI;AAgCLD,EAAAA,iBAAiB,EAAE,6BAAW;AAC1B;AACA,QAAIE,SAAS,GAAG,KAAKC,IAAL,IAAa,KAAKA,IAAL,CAAUC,MAAvB,IAAiC,KAAKD,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAjD,CAF0B,CAG1B;;AACA,QAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACH,GAtCI;AAwCLL,EAAAA,QAAQ,EAAE,oBAAW;AACjBU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,IAAL,CAAUM,MAAtB,EADiB,CAEb;;AACJ,SAAKV,IAAL,CAAUW,YAAV,GAHiB,CAIjB;;AACA,SAAKX,IAAL,CAAUY,SAAV,GALiB,CAMjB;;AACA,SAAKR,IAAL,CAAUS,OAAV;AACH,GAhDI;AAkDLC,EAAAA,KAlDK,mBAkDG,CAEP,CApDI;AAsDLC,EAAAA,MAtDK,kBAsDEC,EAtDF,EAsDM;AACP;AACA,QAAI,KAAKnB,iBAAL,KAA2B,KAAKF,UAApC,EAAgD;AAC5C;AACA,WAAKG,QAAL;AACA;AACH,KANM,CAOP;;;AACA,QAAImB,YAAY,GAAG,IAAI,KAAKjB,IAAL,CAAUkB,KAAV,GAAkB,KAAKlB,IAAL,CAAUmB,YAAnD;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKhB,IAAL,CAAUiB,OAAV,GAAoBD,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAI,MAAMG,UAAV,CAAvB,CAAjC;AACH;AAjEI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pickRadius: 0,\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        // 每帧判断星星和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n    },\n    getPlayerDistance: function() {\n        // 根据 Player 节点位置判断距离\n        var playerPos = this.game && this.game.player && this.game.player.getPosition();\n        // 根据两点位置计算两点之间距离\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n\n    onPicked: function() {\n        console.log(this.node.parent)\n            // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n        // 调用 Game 脚本的得分方法\n        this.game.gainScore();\n        // 然后销毁当前星星节点\n        this.node.destroy();\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n        // 每帧判断星星和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n        // 根据 Game 脚本中的计时器更新星星的透明度\n        var opacityRatio = 1 - this.game.timer / this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n});"]}